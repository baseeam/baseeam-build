@using BaseEAM.Services.Security
@model TaskGroupModel
@{
    var defaultGridPageSize = EngineContext.Current.Resolve<BaseEAM.Core.Domain.GeneralSettings>().DefaultGridPageSize;
    var gridPageSizes = EngineContext.Current.Resolve<BaseEAM.Core.Domain.GeneralSettings>().GridPageSizes;

    var permissionService = EngineContext.Current.Resolve<BaseEAM.Services.IPermissionService>();
    var allowCreate = permissionService.Authorize(StandardPermissionName.Maintenance_TaskGroup_Create);
    var allowRead = permissionService.Authorize(StandardPermissionName.Maintenance_TaskGroup_Read);
    var allowUpdate = permissionService.Authorize(StandardPermissionName.Maintenance_TaskGroup_Update);
    var allowDelete = permissionService.Authorize(StandardPermissionName.Maintenance_TaskGroup_Delete);
}
<div id="group-whereUsed" class="panel-group">
    @Html.Hidden("TaskGroupId", Model.Id)
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <div class="col-md-3">
                    @Html.BaseEamLabelFor(model => model.AssetTypeId, required: true)
                </div>
                <div class="col-md-9">
                    @Html.BaseEamComboBoxFor(model => model.AssetTypeId, "ValueItems", "Common",
                                            new RouteValueDictionary { { "additionalField", "category" }, { "additionalValue", "Asset Type" } }, true, aysIgnore: true)
                </div>
            </div>
        </div>
    </div>    
    <div class="panel panel-default">
        <div class="panel-body">
            <div id="assetTypes-error" class="validation-summary-errors none-display">
            </div>
            <div id="assetTypes-grid"></div>
            <script>
                $(document).ready(function () {
                    $("#assetTypes-grid").kendoGrid({
                        dataSource: {
                            type: "json",
                            transport: {
                                read: {
                                    url: "@Html.Raw(Url.Action("AssetTypeList", "TaskGroup"))",
                                    type: "POST",
                                    dataType: "json",
                                    data: additionalData2_2
                                }
                            },
                            schema: {
                                data: "Data",
                                total: "Total",
                                errors: "Errors",
                                model: {
                                    id: "Id",
                                    fields: {
                                        Id: { hidden: true, editable: false },
                                        AssetTypeName: { editable: false },
                                        AssetTypeId: { hidden: true }
                                    }
                                }
                            },
                            error: function(e) {
                                display_kendoui_grid_error(e);
                                // Cancel the changes
                                this.cancelChanges();
                            },
                            pageSize: @(defaultGridPageSize),
                            serverPaging: true,
                            serverFiltering: true,
                            serverSorting: true
                        },
                        pageable: {
                            refresh: true,
                            pageSizes: [@(gridPageSizes)],
                            @Html.Partial("_GridPagerMessages")
                        },
                        sortable: false,
                        editable: false,
                        scrollable: false,
                        columns: [{
                            field: "AssetTypeName",
                            title: "@T("TaskGroup.AssetType")"
                        }, {
                            field: "AssetTypeId",
                            headerTemplate: "",
                            width: 70,
                            template: '<button type="button" class="deleteRow btn btn-primary@(allowDelete ? "" : " none-display")" onclick="deleteAssetType(event, #=AssetTypeId#);"></span><i class="fa fa-trash aria-hidden="true""></i></button>',
                            sortable: false
                        }]
                    });
                });
            </script>
        </div>
    </div>
</div>

<script type="text/javascript">

    $("#AssetTypeId").change(function (e) {
        e.preventDefault();

        if ($("#AssetTypeId").val() == '') {
            return false;
        }
        var postData = {
            taskGroupId: '@Model.Id',
            assetTypeId: $("#AssetTypeId").val()
        };
        addAntiForgeryToken(postData);
        $.ajax({
            cache: false,
            type: "POST",
            url: "@(Url.Action("SaveAssetType", "TaskGroup"))",
            data: postData,
            success: function (data) {
                if (data && data.Errors) {
                    showErrors(data.Errors, '#validation-summary');
                } else {
                    //refresh grid
                    var grid = $('#assetTypes-grid').data('kendoGrid');
                    grid.dataSource.page(1);
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
                showBSModal({ title: 'ERROR', body: thrownError });
            },
            traditional: true
        });
    });

    function deleteAssetType (e, assetTypeId) {
        e.preventDefault();

        BaseEam.Grid.deleteRow($("#TaskGroupId").val(), assetTypeId, "@Url.Action("DeleteAssetType", "TaskGroup")", "assetTypes-grid", "", true);
    };

    function additionalData2_2() {
        var data = {
            taskGroupId: $("#group-whereUsed").find("#TaskGroupId").val()
        };
        addAntiForgeryToken(data);
        return data;
    }
</script>