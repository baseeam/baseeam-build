﻿﻿@using BaseEAM.Services.Security
@model AssetModel
@{
    var defaultGridPageSize = EngineContext.Current.Resolve<BaseEAM.Core.Domain.GeneralSettings>().DefaultGridPageSize;
    var gridPageSizes = EngineContext.Current.Resolve<BaseEAM.Core.Domain.GeneralSettings>().GridPageSizes;

    var permissionService = EngineContext.Current.Resolve<BaseEAM.Services.IPermissionService>();
    var allowCreate = permissionService.Authorize(StandardPermissionName.Asset_Asset_Create);
    var allowRead = permissionService.Authorize(StandardPermissionName.Asset_Asset_Read);
    var allowUpdate = permissionService.Authorize(StandardPermissionName.Asset_Asset_Update);
    var allowDelete = permissionService.Authorize(StandardPermissionName.Asset_Asset_Delete);
}
<div id="group-workOrders" class="panel-group">
    <div class="panel panel-default">
        <div class="panel-body">
            <div id="workOrders-grid"></div>
            <script>
                $(document).ready(function () {
                    $("#workOrders-grid").kendoGrid({
                        dataSource: {
                            type: "json",
                            transport: {
                                read: {
                                    url: "@Html.Raw(Url.Action("WorkOrderList", "Asset", new { assetId = Model.Id }))",
                                    type: "POST",
                                    dataType: "json",
                                    data: addAntiForgeryToken
                                },
                                //This is used to map field to format that the server can understand
                                //it runs after the data (additionalData) populated
                                parameterMap: function (data, operation) {
                                    sortMapping = [{ from: "AssetName", to: "Asset.Name" },
                                        { from: "LocationName", to: "Location.Name" }
                                    ];
                                    BaseEam.Grid.mapSortColumns(data.sort, sortMapping);
                                    return data;
                                }
                            },
                            schema: {
                                data: "Data",
                                total: "Total",
                                errors: "Errors",
                                model: {
                                    id: "Id"
                                }
                            },
                            error: function(e) {
                                display_kendoui_grid_error(e);
                                // Cancel the changes
                                this.cancelChanges();
                            },
                            pageSize: @(defaultGridPageSize),
                            serverPaging: true,
                            serverFiltering: true,
                            serverSorting: true
                        },
                        pageable: {
                            refresh: true,
                            pageSizes: [@(gridPageSizes)],
                            @Html.Partial("_GridPagerMessages")
                        },
                        sortable: true,
                        editable: false,
                        scrollable: false,
                        columns: [{
                            field: "Number",
                            title: "@T("WorkOrder.Number")",
                            template: '<a target="_blank" href="@Url.Content("~/WorkOrder/Edit/")#=Id#">#=Number#</a>'
                        }, {
                            field: "Description",
                            title: "@T("WorkOrder.Description")"
                        }, {
                            field: "PriorityText",
                            title: "@T("Priority")",
                            sortable: false
                        }, {
                            field: "AssetName",
                            title: "@T("Asset")"
                        }, {
                            field: "LocationName",
                            title: "@T("Location")"
                        }, {
                            field: "ExpectedStartDateTime",
                            title: "@T("WorkOrder.ExpectedStartDateTime")",
                            template: '#= ExpectedStartDateTime != null ? kendo.toString(kendo.parseDate(ExpectedStartDateTime, "MM/dd/yyyy HH:mm:ss"), "MM/dd/yyyy HH:mm:ss") : "" #'
                        }, {
                            field: "Status",
                            title: "@T("WorkOrder.Status")"
                        }]
                    });
                });
            </script>
        </div>
    </div>
</div>
