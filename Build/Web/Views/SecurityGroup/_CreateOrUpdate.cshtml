@model SecurityGroupModel
@Html.HiddenFor(model => model.Id)
@Html.HiddenFor(model => model.IsNew)

<script>
    $(document).ready(function() {
        bindBootstrapTabSelectEvent('securityGroup-edit');
        if ($('#IsNew').val() == 'True') {
            toggleTabs(false);
        } else {
            toggleTabs(true);
        }
    });

    function toggleTabs(show) {
        if (show) {
            $('#tab-sites-header').show();
            $('#tab-permissions-header').show();
        } else {
            $('#tab-sites-header').hide();
            $('#tab-permissions-header').hide();
        }
    }
</script>

<div class="content">
    <div class="form-horizontal">
        <div id="securityGroup-edit" class="nav-tabs-custom">
            <ul class="nav nav-tabs">
                @Html.RenderBootstrapTabHeader("tab-info", @T("SecurityGroup.Info"), true)
                @Html.RenderBootstrapTabHeader("tab-sites", @T("SecurityGroup.Sites"))
                @Html.RenderBootstrapTabHeader("tab-users", @T("SecurityGroup.Users"))
                @Html.RenderBootstrapTabHeader("tab-permissions", @T("SecurityGroup.Permissions"))
            </ul>
            <div class="tab-content">
                @Html.RenderBootstrapTabContent("tab-info", @TabInfo(), true)
                @Html.RenderBootstrapTabContent("tab-sites", @TabSites())
                @Html.RenderBootstrapTabContent("tab-users", @TabUsers())
                @Html.RenderBootstrapTabContent("tab-permissions", @TabPermissions())
            </div>
        </div>
    </div>
</div>

@{
    //custom tabs
    var eventMessage = new AdminTabStripCreated(this.Html, "securityGroup-edit");
    EngineContext.Current.Resolve<IEventPublisher>().Publish(eventMessage);
    foreach (var eventBlock in eventMessage.BlocksToRender)
    {
        @eventBlock
    }
}

@helper TabInfo()
{
    <div class="panel-group">
        <div class="panel panel-default">
            <div class="panel-body">
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.BaseEamLabelFor(model => model.Name, required: true)
                    </div>
                    <div class="col-md-9">
                        @Html.BaseEamEditorFor(model => model.Name)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.BaseEamLabelFor(model => model.Description)
                    </div>
                    <div class="col-md-9">
                        @Html.BaseEamEditorFor(model => model.Description)
                    </div>
                </div>
                @if (Model.Id > 0 && Model.IsNew == false)
                {
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.BaseEamLabelFor(model => model.FirstCreatedBy)
                        </div>
                        <div class="col-md-9">
                            @Html.BaseEamDisplayFor(model => model.FirstCreatedBy)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.BaseEamLabelFor(model => model.LastUpdatedBy)
                        </div>
                        <div class="col-md-9">
                            @Html.BaseEamDisplayFor(model => model.LastUpdatedBy)
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
}
@helper TabSites()
{
    @Html.Partial("_Sites", new SiteModel())
}
@helper TabUsers()
{
    @Html.Partial("_Users", new UserModel())
}
@helper TabPermissions()
{
    @Html.Partial("_Permissions", new SearchModel())
}
