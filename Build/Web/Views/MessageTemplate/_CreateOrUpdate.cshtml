@model MessageTemplateModel
@Html.HiddenFor(model => model.Id)
@Html.HiddenFor(model => model.IsNew)

<script>
    function toggleGroupPushNotification() {
        var includePushNotification = $("#@Html.FieldIdFor(model => model.IncludesPushNotification)").attr('checked');
        if (includePushNotification) {
            $('.group-pushnotification').show();
        } else {
            $('.group-pushnotification').hide();
        }
    }

    function toggleGroupSMS() {
        var includeSMS = $("#@Html.FieldIdFor(model => model.IncludesSMS)").attr('checked');
        if (includeSMS) {
            $('.group-sms').show();
        } else {
            $('.group-sms').hide();
        }
    }

    function toggleGroupEmail() {
        var includeEmail = $("#@Html.FieldIdFor(model => model.IncludesEmail)").attr('checked');
        if (includeEmail) {
            $('.group-email').show();
        } else {
            $('.group-email').hide();
        }
    }

    $(document).ready(function () {
        toggleGroupPushNotification();
        toggleGroupSMS();
        toggleGroupEmail();

        $("#@Html.FieldIdFor(model => model.IncludesPushNotification)").change(function () {
            toggleGroupPushNotification();
        });

         $("#@Html.FieldIdFor(model => model.IncludesSMS)").change(function () {
             toggleGroupSMS();
        });

         $("#@Html.FieldIdFor(model => model.IncludesEmail)").change(function () {
             toggleGroupEmail();
        });

    });
</script>

<div class="content">
    <div class="form-horizontal">
        <div id="messageTemplate-edit" class="nav-tabs-custom">
            <ul class="nav nav-tabs">
                @Html.RenderBootstrapTabHeader("tab-info", @T("MessageTemplate.Info"), true)
            </ul>
            <div class="tab-content">
                @Html.RenderBootstrapTabContent("tab-info", @TabInfo(), true)
            </div>
        </div>
    </div>
</div>

@{
    //custom tabs
    var eventMessage = new AdminTabStripCreated(this.Html, "messageTemplate-edit");
    EngineContext.Current.Resolve<IEventPublisher>().Publish(eventMessage);
    foreach (var eventBlock in eventMessage.BlocksToRender)
    {
        @eventBlock
    }
}

@helper TabInfo()
{
    <div class="panel-group">
        <div class="panel panel-default">
            <div class="panel-body">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <div class="col-md-3">
                                @Html.BaseEamLabelFor(model => model.Name, required: true)
                            </div>
                            <div class="col-md-9">
                                @Html.BaseEamEditorFor(model => model.Name)
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-3">
                                @Html.BaseEamLabelFor(model => model.EntityType)
                            </div>
                            <div class="col-md-9">
                                @Html.BaseEamComboBoxFor(model => model.EntityType, "Entities", "Common")
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <div class="col-md-3">
                                @Html.BaseEamLabelFor(model => model.Description)
                            </div>
                            <div class="col-md-9">
                                @Html.BaseEamEditorFor(model => model.Description)
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-3">
                                @Html.BaseEamLabelFor(model => model.WhereUsed, required: true)
                            </div>
                            <div class="col-md-9">
                                @Html.EnumDropDownListFor(model => model.WhereUsed, new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                </div>
                <hr />
                <h4>@T("MessageTemplate.PushNotificationText")</h4>
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.BaseEamLabelFor(model => model.IncludesPushNotification)
                    </div>
                    <div class="col-md-9">
                        @Html.BaseEamCheckBoxFor(model => model.IncludesPushNotification)
                    </div>
                </div>
                <div class="form-group group-pushnotification">
                    <div class="col-md-3">
                        @Html.BaseEamLabelFor(model => model.PushTemplate, required: true)
                    </div>
                    <div class="col-md-9">
                        @Html.BaseEamEditorFor(model => model.PushTemplate)
                    </div>
                </div>
                <hr />
                <h4>@T("MessageTemplate.IncludesSMSText")</h4>
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.BaseEamLabelFor(model => model.IncludesSMS)
                    </div>
                    <div class="col-md-9">
                        @Html.BaseEamCheckBoxFor(model => model.IncludesSMS)
                    </div>
                </div>
                <div class="form-group group-sms">
                    <div class="col-md-3">
                        @Html.BaseEamLabelFor(model => model.SMSTemplate, required: true)
                    </div>
                    <div class="col-md-9">
                        @Html.BaseEamEditorFor(model => model.SMSTemplate)
                    </div>
                </div>
                <hr />
                <h4>@T("MessageTemplate.IncludesEmailText")</h4>
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.BaseEamLabelFor(model => model.IncludesEmail)
                    </div>
                    <div class="col-md-9">
                        @Html.BaseEamCheckBoxFor(model => model.IncludesEmail)
                    </div>
                </div>
                <div class="form-group group-email">
                    <div class="col-md-3">
                        @Html.BaseEamLabelFor(model => model.EmailSender)
                    </div>
                    <div class="col-md-9">
                        @Html.BaseEamEditorFor(model => model.EmailSender)
                    </div>
                </div>
                <div class="form-group group-email">
                    <div class="col-md-3">
                        @Html.BaseEamLabelFor(model => model.EmailSubjectTemplate, required: true)
                    </div>
                    <div class="col-md-9">
                        @Html.BaseEamEditorFor(model => model.EmailSubjectTemplate)
                    </div>
                </div>
                <div class="form-group group-email">
                    <div class="col-md-3">
                        @Html.BaseEamLabelFor(model => model.EmailBodyTemplate, required: true)
                    </div>
                    <div class="col-md-9">
                        @Html.BaseEamTextAreaFor(model => model.EmailBodyTemplate, rows: 8)
                    </div>
                </div>
                <hr />
                <h4>@T("Common.Attachments")</h4>
                @Html.Partial("Attachment", new AttachmentModel { EntityId = Model.Id, EntityType = EntityType.MessageTemplate })
                @if (Model.Id > 0 && Model.IsNew == false)
                {
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <div class="col-md-3">
                                    @Html.BaseEamLabelFor(model => model.FirstCreatedBy)
                                </div>
                                <div class="col-md-9">
                                    @Html.BaseEamDisplayFor(model => model.FirstCreatedBy)
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-3">
                                    @Html.BaseEamLabelFor(model => model.LastUpdatedBy)
                                </div>
                                <div class="col-md-9">
                                    @Html.BaseEamDisplayFor(model => model.LastUpdatedBy)
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
}