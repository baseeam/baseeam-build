@using BaseEAM.Services.Security
@model AttachmentModel
@{
    var defaultGridPageSize = EngineContext.Current.Resolve<BaseEAM.Core.Domain.GeneralSettings>().DefaultGridPageSize;
    var gridPageSizes = EngineContext.Current.Resolve<BaseEAM.Core.Domain.GeneralSettings>().GridPageSizes;
}
<div id="group-attachments" class="panel-group">
    <div class="panel panel-default">
        <div class="panel-heading">
            @Html.EditorFor(model => Model.UploadFileField, "UploadAttachment", new { entityId = Model.EntityId, entityType = Model.EntityType })
        </div>
        <div class="panel-body">
            <div id="attachments-grid"></div>
            <script>
                $(document).ready(function () {
                    $("#attachments-grid").kendoGrid({
                        dataSource: {
                            type: "json",
                            transport: {
                                read: {
                                    url: "@Html.Raw(Url.Action("List", "Attachment", new { entityId = Model.EntityId, entityType = Model.EntityType }))",
                                    type: "POST",
                                    dataType: "json",
                                    data: addAntiForgeryToken
                                }
                            },
                            schema: {
                                data: "Data",
                                total: "Total",
                                errors: "Errors",
                                model: {
                                    id: "Id"
                                }
                            },
                            error: function(e) {
                                display_kendoui_grid_error(e);
                                // Cancel the changes
                                this.cancelChanges();
                            },
                            pageSize: @(defaultGridPageSize),
                            serverPaging: true,
                            serverFiltering: true,
                            serverSorting: true
                        },
                        pageable: {
                            refresh: true,
                            pageSizes: [@(gridPageSizes)],
                            @Html.Partial("_GridPagerMessages")
                        },
                        sortable: false,
                        editable: false,
                        scrollable: false,
                        columns: [{
                            field: "Name",
                            title: "@T("Attachment.Name")"
                        }, {
                            field: "FileSize",
                            title: "@T("Attachment.FileSize")"
                        }, {
                            field: "CreatedDateTime",
                            title: "@T("Common.CreatedDateTime")",
                            template: '#= CreatedDateTime != null ? kendo.toString(kendo.parseDate(CreatedDateTime, "MM/dd/yyyy HH:mm:ss"), "MM/dd/yyyy HH:mm:ss") : "" #'
                        }, {
                            field: "CreatedUser",
                            title: "@T("Common.CreatedUser")"
                        }, {
                            field: "Id",
                            headerTemplate: "",
                            width: 110,
                            template: '<a class="btn btn-primary" href="@Url.Action("Download", "Attachment")/#=Id#"></span><i class="fa fa-download aria-hidden="true""></i></a>' +
                                    '<a class="btn btn-primary" href="" onclick="deleteAttachment(event, #=Id#);"></span><i class="fa fa-trash aria-hidden="true""></i></a>',
                            sortable: false
                        }]
                    });
                });
            </script>
        </div>
    </div>
</div>

<script type="text/javascript">
    function deleteAttachment(e, id){
        e.preventDefault();
        $.when(kendo.ui.ExtOkCancelDialog.show({
            width: "350px",
            title: "WARNING!",
            message: 'Are you sure you want to delete this item?',
            icon: 'k-ext-warning'
        })).done(function (response) {
            if (response.button == "OK") {
                var postData = {
                    id: id,
                    entityId: @Model.EntityId,
                    entityType: '@Model.EntityType'
                };
                addAntiForgeryToken(postData);

                $.ajax({
                    cache: false,
                    type: "POST",
                    url: "@Url.Action("Delete", "Attachment")",
                    data: postData,
                    success: function (data) {
                        if (data && data.Errors) {
                            showErrors(data.Errors);
                            return;
                        }
                        //reload grid
                        var grid = $('#attachments-grid').data('kendoGrid');
                        grid.dataSource.read();
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert(thrownError);
                    },
                    traditional: true
                });
            }
        });
    };

    $(document).ready(function () {
        window.EventBroker.subscribe("file_uploaded_event", function (message, data) {
            var grid = $('#attachments-grid').data('kendoGrid');
            grid.dataSource.page(1);
        });
    });
</script>