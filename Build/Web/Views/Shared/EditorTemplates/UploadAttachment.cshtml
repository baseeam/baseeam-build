@model long?

@using BaseEAM.Core;
@using BaseEAM.Web.Framework;
@using BaseEAM.Core.Data;

@functions {
    string _entityType = null;
    long? _entityId = null;

    private string EntityType
    {
        get
        {
            if (_entityType == null)
            {
                _entityType = ViewData.ContainsKey("entityType") ? Convert.ToString(ViewData["entityType"]) : ViewData.TemplateInfo.GetFullHtmlFieldName(string.Empty);
            }
            return _entityType;
        }
    }

    private long EntityId
    {
        get
        {
            if (!_entityId.HasValue)
            {
                _entityId = ViewData.ContainsKey("entityId") ? Convert.ToInt64(ViewData["entityId"]) : 0;
            }
            return _entityId.Value;
        }
    }
}

@{
    //register CSS and JS
    Html.AddCssFileParts("~/Scripts/fineuploader/fineuploader-4.2.2.min.css");
    Html.AddScriptParts("~/Scripts/fineuploader/jquery.fineuploader-4.2.2.min.js");

    //other variables
    var random = CommonHelper.GenerateRandomInteger();
    var clientId = "attachment" + random;
    var imageSrc = Url.Content("~/Content/images/default-image.jpg");
    var attachmentRepository = EngineContext.Current.Resolve<IRepository<Attachment>>();
    var attachment = attachmentRepository.GetAll()
        .FirstOrDefault(a => a.EntityAttachments.Any(e => e.EntityId == EntityId && e.EntityType == EntityType));
}

<div id="@(clientId + "value")">
    @Html.HiddenFor(x => x)
</div>
<div class="row">
    <div class="col-md-12">
        @*fine uploader container*@
        <div id="@clientId" class="upload-image-button pull-left margin-t-5">
            <noscript>
                <p>Please enable JavaScript to use file uploader.</p>
            </noscript>
        </div>
    </div>
</div>

@*fine uploader template (keep it synchronized to \Content\fineuploader\templates\default.html)*@
<script type="text/template" id="@(clientId)-qq-template">
    <div class="qq-uploader-selector qq-uploader">
        <div class="qq-upload-drop-area-selector qq-upload-drop-area" qq-hide-dropzone>
            <span>@T("Common.FileUploader.DropFiles")</span>
        </div>
        <div class="qq-upload-button-selector qq-upload-button">
            <div>@T("Common.FileUploader.Upload")</div>
        </div>
        <span class="qq-drop-processing-selector qq-drop-processing">
            <span>@T("Common.FileUploader.Processing")</span>
            <span class="qq-drop-processing-spinner-selector qq-drop-processing-spinner"></span>
        </span>
        <ul class="qq-upload-list-selector qq-upload-list">
            <li>
                <div class="qq-progress-bar-container-selector">
                    <div class="qq-progress-bar-selector qq-progress-bar"></div>
                </div>
                <span class="qq-upload-spinner-selector qq-upload-spinner"></span>
                <span class="qq-edit-filename-icon-selector qq-edit-filename-icon"></span>
                <span class="qq-upload-file-selector qq-upload-file"></span>
                <input class="qq-edit-filename-selector qq-edit-filename" tabindex="0" type="text">
                <span class="qq-upload-size-selector qq-upload-size"></span>
                <a class="qq-upload-cancel-selector qq-upload-cancel" href="#">@T("Common.FileUploader.Cancel")</a>
                <a class="qq-upload-retry-selector qq-upload-retry" href="#">@T("Common.FileUploader.Retry")</a>
                <a class="qq-upload-delete-selector qq-upload-delete" href="#">@T("Common.FileUploader.Delete")</a>
                <span class="qq-upload-status-text-selector qq-upload-status-text"></span>
            </li>
        </ul>
    </div>
</script>
<script type="text/javascript">

    $(document).ready(function () {

        $("#@(clientId)").fineUploader({
            request: {
                endpoint: '@Url.Action("AsyncUpload", "Attachment")',
                params: { entityId : @EntityId, entityType : '@EntityType'}
            },
            template: "@(clientId)-qq-template",
            multiple: false
        }).on("complete", function(event, id, name, responseJSON, xhr) {
            if (responseJSON.success) {
                $("#@(clientId + "value") input").val(responseJSON.attachmentId);
                // fire uploaded event
                window.EventBroker.publish('file_uploaded_event', null);
            }
        });
    });
</script>